name: Django CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
          MYSQL_ROOT_PASSWORD: root_password
        options: >-
          --health-cmd="mysqladmin ping -u root --password=root_password"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 coverage

      - name: Wait for MySQL to be Ready
        run: |
          while ! mysqladmin ping -h 127.0.0.1 -u root --password=root_password --silent; do
            echo "Waiting for MySQL..."
            sleep 3
          done

      - name: Set Up Django Database
        env:
          DATABASE_URL: "mysql://test_user:test_password@127.0.0.1:3306/test_db"
        run: |
          source venv/bin/activate
          python manage.py migrate

      - name: Run Code Quality Checks (flake8)
        run: |
          source venv/bin/activate
          flake8 .
        # Fail the build if linting errors are detected

      - name: Run Tests with Coverage
        env:
          DATABASE_URL: "mysql://test_user:test_password@127.0.0.1:3306/test_db"
        run: |
          source venv/bin/activate
          coverage run --source='.' manage.py test
          coverage xml

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
